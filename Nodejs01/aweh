const express = require('express')
const app = express()
const Blog = require('./models/blog')
app.use(express.static('public'))
app.use(express.urlencoded({extended:true}))
app.set('view engine','ejs')
const mongoose = require('mongoose')
const dbURL = 'mongodb+srv://taffy:Horizontal@cluster0.zaejtoj.mongodb.net/blogsDataBase?retryWrites=true&w=majority&appName=Cluster0'
mongoose.connect(dbURL)
.then(result => app.listen(3000))
.catch(err => console.log(err))

// routing 
app.get('/',(req,res)=>res.render('index',{title:'home'}))
app.get('/blogs',(req,res)=>res.redirect('/all-blogs'))
app.get('/about',(req,res)=>res.render('about',{title:'home'}))
app.get('/form',(req,res)=>res.render('form',{title:'home'}))


// 

app.get('/all-blogs',(req,res)=>{
    Blog.find()
    .then(result => res.render('blogs',{title:'all blogs',blogs:result}))
    .catch(err=> console.log(err))
})

app.get('/details/:id',(req,res)=>{
   const id = req.params.id
   Blog.findById(id)
   .then(result => res.render('details',{title:'blog', blog:result}))
   .catch(err => console.log(err))
    
})
// post
app.post('/form',(req,res)=>{
    const blog = new Blog(req.body)

    blog.save()
    .then(result => res.redirect('/blogs'))
    .catch(err=> cosnole.log(err))
})

//


// 404 routing 
app.get((req,res)=>res.status(404).render('404',{title:'404 page not found'}))


//
//
\//
///
//
//
//
//
//
//
//
//
//
//
//
//
const mongoose = require('mongoose')
const Schema = mongoose.Schema;
const blogSchema = new Schema({
    title:{
        type:String,
        required: true
    },
    snippet:{
        type:String,
        required: true
    },
    body:{
        type:String,
        required: true
    },
},{timestamps:true})
const Blog = mongoose.model('Blog',blogSchema)
module.exports = Blog



// 
app.delete('/blogs/:id',(req,res)=>{
    const id = req.params.id
    Blog.findByIdAndDelete(id)
    .then(result => {
        res.json({redirect:'/blogs'})
    })
    .catch(err => console.log(err))
})

<script>
        const trashcan = document.querySelector('a.delete')
        trashcan.addEventListener('click',(e)=>{
            const endpoint = `/blogs/${trashcan.dataset.doc}`

            fetch(endpoint,{
                method:'DELETE'
            })
            .then(response =>
                response.json()
            )
            .then((data) =>{
                console.log(data)
            })
            .catch(err => console.log(err))
        })
    </script>